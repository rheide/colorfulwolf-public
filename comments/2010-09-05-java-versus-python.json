{"comments": [{"author": "K\u0119stutis", "date": "2010-09-07 07:50:25", "content": "If you like Django, you also may like Play framework: http://www.playframework.org/"}, {"author": "Safe Hammad", "date": "2010-09-07 11:00:37", "content": "It was great to read a post which verbalises the same experience I had a few years back on a personal project.  As a Java/Spring developer I put together a web app for a local charity and chose Python/Django because the web host wouldn't run Java (let alone Java's memory requirements).  I've never looked back since.<br/><br/>This is an easy decision to make for a personal project but much more problematic when trying to convert a small Java/Spring team to Python/Django.  This will prove much more difficult in terms of politics, time and expense.  There is a trade-off between the obvious benefits you mention in your post versus the increased complexity and cost associated with increasing the number and variety of technologies used on a project, particularly with a large legacy Java/Spring codebase.<br/><br/>While trying to quantify that trade-off, directing the team to posts like this is a good start!"}, {"author": "Meelis", "date": "2010-09-07 19:48:14", "content": "About announcing goals.<br/>A short TED talk \"Derek Sivers: Keep your goals to yourself\"<br/>http://www.youtube.com/watch?v=NHopJHSlVo4"}, {"author": "Tibal", "date": "2010-10-31 08:24:08", "content": "\"no single website available to me where I can maintain a list of all the things that I\u2019ve seen (movies, tv shows, anime) or read (books)\"<br/><br/>actually, such a website exists : http://www.senscritique.com  ... but it is only available in French so far, and officially launches tomorrow...<br/><br/>Have fun with Django !"}, {"author": "Jerry", "date": "2010-10-31 14:16:29", "content": "You may also be interested in http://jython.org.<br/><br/>If you haven't seen it, it is a version of Python that runs on a JVM. You can use native Java classes, compile your Python to Java byte code, and use many popular Java frameworks. You can even use most of Django without modifying your code.<br/><br/>It's quite a fascinating project."}, {"author": "Frank Carver", "date": "2010-11-01 14:11:31", "content": "I have faced similar issues, but my experiences have led in a somewhat different direction. I came to the conclusion that the problem with the bloat and inflexibility of many Java web applications is not actually a problem with Java itself, but instead a problem with the culture of the technologies used with it. Hibernate, Spring, Struts, tiles, jsp and so on seem to cause at least as many problems as they solve.<br/><br/>With this in mind I wrote my own light-weight approach to web application development which (it turns out) has much more in common with the way web applications are typically written in the recent crop of dynamic languages. As with all such things the examples on the website are a bit out of date now, but a good flavour of what I was after can be seen at http://mojasef.stringtree.org/principles.html<br/><br/>Admittedly, for deployments which can't run Java (such as low-cost web hosting) I have been having fun with Ruby and Sinatra, but when it counts I am still more productive and equivalently concise using Java with help from Mojasef and Stringtree."}]}